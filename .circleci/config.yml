version: 2.1 # use CircleCI 2.1

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point. But we have a workflow so lol
    working_directory: ~/sandbox # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:13  # Using the circleci nodejs 13 convenience image
    steps: # executable commands in order
      - checkout # special step to check out source code to the defined working directory
      - run:
          name: update-npm #Update NPM gloablly 
          command: 'sudo npm install -g npm@latest'
      - run: # install the dependencies
          name: install-npm
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache1-{{ checksum "package-lock.json" }} #Current key naming is based on a checksum of the package-lock.json. 
          paths:
            - ./node_modules
      # - run:
      #     name: Run tests
      #     command: npm run test

  test:
      working_directory: ~/sandbox
      docker:
        - image: circleci/node:13
      steps:
        - checkout
        - restore_cache: # Restore Dependencies cached in the build Step
            key: dependency-cache1-{{ checksum "package-lock.json" }}   # Unless the package-lock.json has changed from when it its state it was checksumed and stored, this will retrieve the first file matching this naming structure
        - run:
            name: Where am i
            command: "pwd && ls"
        - run:
            name: Run tests
            command: npm run test

  deploy:
    working_directory: ~/sandbox
    docker:
      - image: circleci/node:13
    steps:
      - checkout
          #Log the current branch
      - run:
          name: Show Current Branch
          command: echo ${CIRCLE_BRANCH}

      #Install the AWS cli
      - run:
          name: Installing python-pip and aws cli
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python-pip python-dev build-essential
            sudo pip install awsebcli --upgrade

      - run:
          name: Deploy to AWS Elastic Beanstalk
          command: eb deploy SandboxEbApi-env

workflows:
  version: 2
  
  build_test_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master


        




      # - restore_cache: # special step to restore the dependency cache
      #     # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      #     key: dependency-cache-{{ checksum "package-lock.json" }}
      # - save_cache: # special step to save the dependency cache
      #     key: dependency-cache-{{ checksum "package-lock.json" }}
      #     paths:
      #       - ./node_modules
      # - run: # run tests
      #     name: test
      #     command: npm run test
      # - store_artifacts: # special step to save test results as as artifact
      #     # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
      #     path: test-results.xml
      #     prefix: tests
      # - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
      #     path: coverage
      #     prefix: coverage
      # - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
      #     path: test-results.xml
      # # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples